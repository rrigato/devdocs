Description:
  Cross account role that lives in production bucket for >
  updating webpage

Parameters:
  BucketName:
    Type: String
    Default: ryanrigato.com
    Description:
        The name for the bucket where the static webpage is hosted
  DevelopmentAccount:
    Type: String
    Default: 1234567
    Description: Account id allowed to assume the cross account role

Resources:
  CrossAccountRole:
    Type: AWS::IAM::Role
    Properties:
      #trust policy for the role = who is allowed to assume the role
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            !Join ['', ['arn:aws:iam::',
             !Ref AWS::AccountId, ':user/*']]
        Version: '2012-10-17'
      #permissions policy for the role =
      #once the role is assumed what resources int the prod
      #account are allowed to be used
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Path: /
      Policies:
          - PolicyName: DevAccountAuthorization
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Sid: S3Allow
                  Effect: Allow
                  #######################################
                  #Allowing lambda to perform a PutItem on
                  #DynamoDB
                  #
                  #######################################
                  Action:
                    #- iam:PassRole
                    - s3:ListBucket
                    - s3:ListAllMyBuckets
                    - s3:GetObject
                    - s3:DeleteObject
                    - s3:PutObject
                  Resource:
                    - "*"
Outputs:
  CrossAccountRoleArn:
    Description: Arn for the cross account role
    Value: !GetAtt CrossAccountRole.Arn
